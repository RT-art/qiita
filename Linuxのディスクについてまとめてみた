
/dev　すべてのハードウェアについてまとめられてある

/dev/sda ハードディスク全体を表す
/dev/sda1
/dev/sda2 ディスクの1番目、２番目のパーティションを表す

mbrとgptがある

MBR→めっちゃ古い
GPT→新しい

sudo fdisk -l /dev/sda
出力の最初のほうに「Disklabel type:」という行があり、ここに dos（MBRのこと）か gpt と表示される

パーティションで区切られただけでは、まだ使えない
ファイルシステムを作らなくてはいけない
ファイルシステム＝ データの保存方法のルール
ファイルシステムを作成→フォーマット

ディレクトリ構造をできるようにしたり、
ファイルのアドレッシング（物理的にファイルがどこに保存されているか記録管理し、データをすぐ探せるようにする）
ファイルに関するメタデータ（ファイル名、ファイルサイズ、作成日時など）

ファイルシステムの種類
ext4　標準的
xfs　大規模なファイルシステム向け
btrfs　新しめ

sudo mkfs.ext4 /dev/sda1

作成したファイルシステムをマウント (mount) することで、特定のディレクトリパスに接続できる

sudo mount -t ext4 /dev/sda1 /mnt

LVM
/dev/mapper/　って名前から、LVMを使っているのがわかる
mapperは、Device Mapperといって、この仕組みで、論理ボリューム(LV)を作成している

ol-root
ol: Oracle Linuxのインストーラーがデフォルトで作成する**ボリュームグループ(VG)**の名前。
root: そのボリュームグループの中に作られた、ルートファイルシステム（/）用の**論理ボリューム(LV)**の名前

オンライン拡張手順
Hyper-vでディスク拡張(64GB→100GB)

sudo lsblk

sudo fdisk /dev/sda
n
p
4
Enter
Enter

t
4
31

w

fdiskではこのボリュームはLVMというラベルを貼ったのみ。
LVMの際は、ファイルシステムを拡張する前に、pvcreateでLVMが管理できる形式に変換する必要がある
sudo pvcreate /dev/sda4

olのボリュームグループに新しい物理ボリュームを追加する
さっき、LVMとしてfdiskでパーティションを設定し、pvcreateでLVMが管理できる形式に変換したので、これをボリュームグループに追加する
sudo vgextend ol /dev/sda4

ol はあなたのボリュームグループ名。vgdisplay で確認可能

olを拡張したので、それをrootに割り当てる
sudo lvextend -l +100%FREE /dev/mapper/ol-root

割り当てた空き容量に、ファイルシステムを追加。
自動的にファイルシステムが適用されていない箇所を検出して拡張してくれる

   * ファイルシステムが ext4 の場合:
     sudo resize2fs /dev/mapper/ol-root

   * ファイルシステムが xfs の場合:
     sudo xfs_growfs /

既存のボリューム拡張の際は、マウントは必要ない